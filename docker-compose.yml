# CBEL Tracking System - Docker Compose配置
# 用于VPS部署的完整服务栈

version: '3.8'

services:
  # Next.js应用
  cbel-tracking:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: cbel-tracking-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DEPLOY_TARGET=server
      - PORT=3000
      - HOSTNAME=0.0.0.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cbel-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: cbel-tracking-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/vps/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/vps/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - cbel-tracking
    restart: unless-stopped
    networks:
      - cbel-network

  # Redis缓存（可选）
  redis:
    image: redis:7-alpine
    container_name: cbel-tracking-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - cbel-network

  # 监控服务（可选）
  watchtower:
    image: containrrr/watchtower
    container_name: cbel-tracking-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30 --cleanup
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  cbel-network:
    driver: bridge
